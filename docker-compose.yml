version: '3'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql8.0
    ports:
      - "3305:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=1234
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql

  redis:
    image: redis:alpine3.22
    container_name: localRedis
    command:
      - "redis-server"
      - "--appendonly"
      - "yes"
    ports:
      - 6379:6379
    networks: [monitoring]

  kafka:
    image: bitnami/kafka:4.0.0-debian-12-r7
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
      - "29092:29092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # 리스너 정의: 내부/컨트롤러/호스트
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:29092
      # 클라이언트에게 광고될 주소(메타데이터)
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT


  kafka-ui:
    image: provectuslabs/kafka-ui:master
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8085:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  grafana:
    image: grafana/grafana-oss:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-provisioning:/etc/grafana/provisioning
      - ./grafana-dashboard:/dashboard
    depends_on:
      - prometheus
      - influxdb
    restart: always
    privileged: true
    networks: [monitoring]

  prometheus:
    image: prom/prometheus:v2.41.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
#      - "prometheus_volume:/prometheus"
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yml
    restart: always
    networks: [monitoring]


  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    volumes:
      - ./influxdb:/var/lib/influxdb
    networks: [monitoring]

  k6:
    image: grafana/k6
    container_name: k6
    volumes:
      - ./scripts:/scripts
      - ./k6-scripts:/scripts/k6-scripts
    environment:
      - BASE_URL=http://host.docker.internal:8080
      - K6_INFLUXDB_ADDR=http://influxdb:8086
      - K6_INFLUXDB_DATABASE=k6
#      프로메테우스 설정
#      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
#      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
    command: run -o influxdb=http://influxdb:8086/k6 /scripts/order.js
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - prometheus
      - influxdb
    networks: [monitoring]


volumes:
  grafana_volume:
    external: true
  prometheus_volume:
    external: true

networks:
  monitoring:
    driver: bridge